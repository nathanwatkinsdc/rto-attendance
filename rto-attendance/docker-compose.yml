# docker-compose.yml
version: '3.8'

services:
  app:
    build: .
    container_name: rto-attendance-app
    ports:
      - "3838:3838"
    environment:
      - DATABASE_URL=postgresql://app_user:${DB_PASSWORD:-password}@db:5432/attendance
      - SHINY_LOG_LEVEL=INFO
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./data:/srv/shiny-server/rto-attendance/data
      - ./logs:/srv/shiny-server/rto-attendance/logs
      - ./config:/srv/shiny-server/rto-attendance/config
    restart: unless-stopped
    networks:
      - attendance-network

  db:
    image: postgres:15-alpine
    container_name: rto-attendance-db
    environment:
      POSTGRES_DB: attendance
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./database/seed_data.sql:/docker-entrypoint-initdb.d/2-seed.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d attendance"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - attendance-network

  nginx:
    image: nginx:alpine
    container_name: rto-attendance-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - attendance-network

volumes:
  postgres_data:
    driver: local

networks:
  attendance-network:
    driver: bridge